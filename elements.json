[
	{ "Key": "PageTitle", "Value": "HTML controls generation" },
	{ "Key": "HeaderTitle", "Value": "HTML controls generation" },
	{ "Key": "HeaderDescription", "Value": "Generating standard form controls with saving the state of the elements after the form is submitted." },
	{ "Key": "PHP", "Value": "PHP" },
	{ "Key": "HTML", "Value": "HTML Output" },
	{ "Key": "Design", "Value": "Design" },
	{ "Key": "IntroductionText1", "Value": "Static class <code>Nemiro\\UI\\Html</code> can generate some controls <strong>HTML</strong>." },
	{ "Key": "IntroductionText2", "Value": "Almost every method in addition to the standard parameters, accepts parameter <code>$htmlAttributes</code>, which can be enumerated a list of additional html-attributes. For example:" },
	{ "Key": "IntroductionText3", "Value": "When submitting a form, all of these values are automatically restored. There is no need to restore the values manually." },
	{ "Key": "FormExample", "Value": "Form example" },
	{ "Key": "IntroductionText4", "Value": "Fill out the form and send. After reloading the page, the form values are automatically restored (only for <strong>PHP</strong> version)." },
	{ "Key": "LabelText1", "Value": "When placing the <strong>label</strong>, required parameter is the label text." },
	{ "Key": "LabelText2", "Value": "If you want to bind a <strong>label</strong> to specified control, it is necessary to set the identifier for the second parameter." },
	{ "Key": "CheckBoxText1", "Value": "To place a <strong>CheckBox</strong> must specify name of the element. By the name you can get the value of the element to the server, after submitting the form." },
	{ "Key": "CheckBoxText2", "Value": "The <code>value</code> parameter has a default value is <code>true</code>, but you can override it." },
	{ "Key": "CheckBoxText3", "Value": "With <strong>Label</strong> can be added caption to <strong>CheckBox</strong>." },
	{ "Key": "CheckBoxText4", "Value": "Note the identifier - <code>checkbox123</code>, it is the same for <strong>Label</strong> and <strong>CheckBox</strong>." },
	{ "Key": "CheckBoxListText1", "Value": "To create a list of <strong>CheckBox</strong>, can be use the <strong>CheckBoxList</strong> method, which accepts the name of the group and a list of items." },
	{ "Key": "CheckBoxListText2", "Value": "The list is an array of elements, each element of which is an associative array containing the <code>value</code> and <code>title</code> of <strong>CheckBox</strong>." },
	{ "Key": "RadioButtonText1", "Value": "<strong>RadioButton</strong> very similar to the <strong><a href=\"#CheckBox\">CheckBox</a></strong>." },
	{ "Key": "RadioButtonText2", "Value": "Grouping <strong>RadioButton</strong> occurs named. For uniqueness, you can use an identifier that can be specified in the second parameter." },
	{ "Key": "RadioButtonListText1", "Value": "The principle of constructing lists <strong>RadioButton</strong> is no different from similar lists <strong>CheckBox</strong>." },
	{ "Key": "TextBoxText1", "Value": "Method <strong>TextBox</strong> allows to place a one-line text box. There are also methods for <strong>Password</strong> and <strong>Hidden</strong>." },
	{ "Key": "TextAreaText1", "Value": "To output multiline text fields can use the method <strong>TextArea</strong>." },
	{ "Key": "DropDownListText1", "Value": "The <strong>DropDownList</strong> method creates a drop-down list." },
	{ "Key": "DropDownListText2", "Value": "List elements can be specified in the text array. For more complex lists, can be used an associative array, like for <strong><a href=\"#CheckBoxList\">CheckBoxList</a></strong> or <strong><a href=\"#RadioButtonList\">RadioButtonList</a></strong>." },
	{ "Key": "ListBoxText1", "Value": "For multi-line listmay be used the <strong>ListBox</strong> method, which is completely the same as the <strong>DropDownList</strong>, but in addition accepts the number of rows displayed in the list." },
	{ "Key": "PaginationText1", "Value": "With <strong>Pagination</strong> method can be create a list of pages." },
	{ "Key": "PaginationText2", "Value": "To place a list of the pages must specify current page number and total number of records." },
	{ "Key": "PaginationText3", "Value": "You can specify an address to be used in the construction of the <strong>URL</strong> of a particular page. If the <strong>URL</strong> is not specified, it will use the address of the current page." },
	{ "Key": "PaginationText4", "Value": "By default, any additional parameters will automatically be removed from the <strong>URL</strong>. This is to prevent generation of incorrect references through the list of pages. You can provide a list of parameter names that are allowed to use in the <strong>URL</strong>." }
]